# Copyright (c) 1999-2014 Upi Tamminen <desaster at gmail>
# See the COPYRIGHT file for more information

package hienoa

# Cleanup

alias h.cleanup {
    echo $*
    @ :version = h.version
    @ :path = h.path
    timer -d all
    dump
    @ h.version = version
    @ h.path = path
}
h.cleanup

# now in epic5 a lot of the old stuff is scripted

load global

# Check things

fe (~/.hienoa ~/.hienoa/themes ~/.hienoa/modules \
        ~/.hienoa/help ~/.hienoa/sessions) h.d {
    if (fexist($h.d) != 1 && mkdir($h.d) != 0) {
        echo !!! Failed to create $h.d
        quit
    }
}

# Load core stuff

fe (aliases defaults keyboard events config) h.f {
    load $h.path/core/${h.f}.irc
    h.loadbar
}

# Load modules

#eval echo $glob(${h.path}/modules/*.irc*)
fe ($glob(${h.path}/modules/*.irc*)) h.fn {
    load $h.fn
    h.loadbar
}

# Initialize stuff

@ h.default_theme = h.cfg.theme
if (fexist(~/.hienoa/config) == 1) { load ~/.hienoa/config }
hook config_change
h.loadbar

if (h.cfg.log_dir) {
    if (fexist($h.cfg.log_dir) != 1 && mkdir($h.cfg.log_dir) != 0) {
        xecho -b couldn't create ($h.cfg.log_dir). auto logging disabled.
        ^assign h.autolog 0
    }
}

if (numwords($winrefs()) == 1) { window level none }

# Load & initialize theme

if (fexist(~/.hienoa/themes/$h.cfg.theme) == 1) {
    ^load ~/.hienoa/themes/$h.cfg.theme
} elsif (fexist($h.path/themes/$h.cfg.theme) == 1) {
    ^load $h.path/themes/$h.cfg.theme
} else {
    load $h.path/themes/$h.default_theme
}

h.theme.init

# Remove unneeded stuff

assign -h.cfgtitle
assign -h.loadbar
alias -h.loadbar
alias -config_title
alias -config_entry

hook post_load

# Say sumthin' !

eval xecho -b hienoa ${h.version} loaded
^set -input_prompt

stack push set load_path
eval set load_path ${h.path}/stock/
fe ($glob(${h.path}/stock/*)) h.s {
    eval load $h.s
}
stack pop set load_path

alias get_structure_children (partial) {
    @ :varlist = []
    fe ($aliasctl(assign pmatch ${partial}.*)) i {
        @ :name = rest(${strlen($partial) + 1} $i)
        if (count(. $name)) {
            @ :name = before(. $name)
        }
        @ :fullname = [${partial}.${name}]
        if (findw($name $varlist) == -1) {
            @ :varlist = insertw(0 $name $varlist)
        }
    }
    return $varlist
}

# vim: set ai tw=75 sw=4 et:
